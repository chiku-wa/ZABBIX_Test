# hostsに定義したグループ名を記載する
- name: 構築済みのZabbixに監視設定を追加するプレイブック
  hosts: zabbix_test

  # ===== プレイブックで使用する、各種設定値が定義されたYAML設定ファイルを読み込む
  vars_files:
    - ./ansible_settings.yml

  # ===== 各種変数を定義
  vars:
    # ----- Zabbix関連
    # Zabbix APIのリクエスト用URL
    zabbix_api_url: "http://{{ ansible_default_ipv4.address }}/zabbix/api_jsonrpc.php"

    # Zabbix APIのjsonrpcのバージョン
    zabbix_api_jsonrpc: "2.0"

    # リクエストヘッダ情報
    zabbix_api_header_content_type: "application/json"
    zabbix_api_header_authorization: "Bearer {{ zabbix.api_token }}"
    zabbix_api_header_body_format: "json"

  # ===== リモートホストでsudoで実行するかどうか
  # sudoしない（root接続することが前提のため）
  become: false

  # ===== 実行するタスク（コマンド）を定義
  tasks:
    # ==================================================================================================================================
    # ========== Zabbix APIを通じて、Snipe-ITにログインし、ログイン後に「ダッシュボード」が表示されることを確認する監視設定を作成する

    # ---------------------------------------------
    # ----- 監視対象ホスト作成
    - name: Zabbix APIでホスト作成：監視対象のSnipe-ITのホストを作成する
      ansible.builtin.uri:
        method: "GET"

        url: "{{ zabbix_api_url }}"
        headers:
          Content-Type: "{{ zabbix_api_header_content_type }}"
          Authorization: "{{ zabbix_api_header_authorization }}"
        body_format: "{{ zabbix_api_header_body_format }}"

        body:
          jsonrpc: "{{ zabbix_api_jsonrpc }}"
          method: "host.create"
          params:
            # ホスト
            host: "{{ zabbix.target_host.host }}"
            # 表示名
            name: "{{ zabbix.target_host.name }}"
            # ホストグループ
            groups: "{{ zabbix.target_host.groups }}"
            # インタフェース
            interfaces: "{{ zabbix.target_host.interfaces }}"
          id: 2

      # レスポンスを変数に格納する
      register:
        result_zabbix_api_for_create_host

      # レスポンスに以下のJSON構造でエラーを示す要素が含まれている場合はエラーとする
      # ※Ansibleでは、HTTPステータスコード=200だと失敗にならないため、明示的にエラーを発生させる
      # --------------------------------
      #   "json": {
      #     "error": {
      # --------------------------------
      failed_when: "'error' in result_zabbix_api_for_create_host.json"

    # ---------------------------------------------
    # ----- アイテム作成
    - name: Zabbix APIでアイテム作成：Seleniumを用いた監視用スクリプトを定義する
      ansible.builtin.uri:
        method: "GET"

        url: "{{ zabbix_api_url }}"
        headers:
          Content-Type: "{{ zabbix_api_header_content_type }}"
          Authorization: "{{ zabbix_api_header_authorization }}"
        body_format: "{{ zabbix_api_header_body_format }}"

        body:
          jsonrpc: "{{ zabbix_api_jsonrpc }}"
          method: "item.create"
          params:
            # 紐づけたいホストのID（先ほどの処理で作成したホストのIDを指定する）
            hostid: "{{ result_zabbix_api_for_create_host.json.result.hostids[0] }}"
            # 名前
            name: "{{ item.name }}"
            # タイプ（ブラウザは「22」）
            type: "{{ item.type }}"
            # キー
            key_: "{{ item.key_ }}"
            # データ方（テキストは「4」）
            value_type: "{{ item.value_type }}"
            # 実行させたいSeleniumスクリプト
            params: "{{ item.params }}"
            # 監視間隔
            delay: "{{ item.delay }}"
            # タイムアウト（デフォルト設定を用いるため、指定しない）
            # "timeout": "{{ items.XXX }}",
            # ヒストリの保存期間
            history: "{{ item.history }}"
          id: 2

      # 設定ファイルに定義したアイテム数だけ作成処理を繰り返す
      loop: "{{ zabbix.host_items }}"

      # レスポンスを変数に格納する
      register:
        result_zabbix_api_for_create_items

      # レスポンスに以下のJSON構造でエラーを示す要素が含まれている場合はエラーとする
      # ※Ansibleでは、HTTPステータスコード=200だと失敗にならないため、明示的にエラーを発生させる
      # --------------------------------
      #   "json": {
      #     "error": {
      # --------------------------------
      failed_when: "'error' in result_zabbix_api_for_create_items.json"

    # ---------------------------------------------
    # ----- ダッシュボード画面が表示されているかどうかの判定に使用する、正規表現を作成
    - name: Zabbix APIで正規表現作成：ダッシュボード画面の表示判定用の正規表現文字列を定義する
      ansible.builtin.uri:
        method: "GET"

        url: "{{ zabbix_api_url }}"
        headers:
          Content-Type: "{{ zabbix_api_header_content_type }}"
          Authorization: "{{ zabbix_api_header_authorization }}"
        body_format: "{{ zabbix_api_header_body_format }}"

        body:
          jsonrpc: "{{ zabbix_api_jsonrpc }}"
          method: "regexp.create"
          params:
            name: "{{ zabbix.regex.name }}"
            expressions: "{{ zabbix.regex.expressions }}"
          id: 2
      # レスポンスを変数に格納する
      register:
        result_zabbix_api_for_regex

      # レスポンスに以下のJSON構造でエラーを示す要素が含まれている場合はエラーとする
      # ※Ansibleでは、HTTPステータスコード=200だと失敗にならないため、明示的にエラーを発生させる
      # --------------------------------
      #   "json": {
      #     "error": {
      # --------------------------------
      failed_when: "'error' in result_zabbix_api_for_regex.json"
