# hostsに定義したグループ名を記載する
- name: 構築済みのZabbixに監視設定を追加するプレイブック
  hosts: zabbix_test

  # ===== プレイブックで使用する、各種設定値が定義されたYAML設定ファイルを読み込む
  vars_files:
    - ./ansible_settings.yml

  # ===== 各種変数を定義
  vars:
    # ----- Zabbix関連
    # Zabbix APIのリクエスト用URL
    zabbix_api_url: "http://{{ ansible_default_ipv4.address }}/zabbix/api_jsonrpc.php"

    # Zabbix APIのjsonrpcのバージョン
    zabbix_api_jsonrpc: "2.0"

  # ===== リモートホストでsudoで実行するかどうか
  # sudoしない（root接続することが前提のため）
  become: false

  # ===== 実行するタスク（コマンド）を定義
  tasks:
    # ==================================================================================================================================
    # ========== Zabbix APIを通じて、Snipe-ITにログインし、ログイン後に「ダッシュボード」が表示されることを確認する監視設定を作成する

    # ---------------------------------------------
    # [監視対象ホストの設定を作成する]
    - name: Zabbix APIでホスト作成：監視対象のSnipe-ITのホストを作成する
      ansible.builtin.uri:
        # APIのリクエスト先のURLを指定する。IPには、Ansibleで接続している管理対象ノードのIPを指定する
        url: "{{ zabbix_api_url }}"
        method: "GET"

        # リクエストヘッダーを定義する。
        headers:
          Content-Type: "application/json"
          Authorization: "Bearer {{ zabbix.api_token }}"

        # JSONで具体的なリクエスト情報を送信する
        body_format: "json"

        body:
          jsonrpc: "{{ zabbix_api_jsonrpc }}"
          method: "host.create"
          params:
            # ホスト
            host: "{{ item.host }}"
            # 表示名
            name: "{{ item.name }}"
            # ホストグループ
            groups: "{{ item.groups }}"
            # インタフェース
            interfaces: "{{ item.interfaces }}"
          id: 2

      # 設定ファイルに定義した監視対象ホスト一覧の数だけ、ホスト作成処理を繰り返す
      loop: "{{ zabbix.target_hosts }}"

      # レスポンスを変数に格納する
      register:
        result_zabbix_api

      # レスポンスに以下のJSON構造でエラーを示す要素が含まれている場合はエラーとする
      # ※Ansibleでは、HTTPステータスコード=200だと失敗にならないため、明示的にエラーを発生させる
      # --------------------------------
      #   "json": {
      #     "error": {
      # --------------------------------
      failed_when: "'error' in result_zabbix_api.json"

    # ---------------------------------------------
    # [ダッシュボード画面が表示されているかどうかの判定に使用する、正規表現を作成]
    - name: Zabbix APIで正規表現作成：ダッシュボード画面の表示判定用の正規表現文字列を定義する
      ansible.builtin.uri:
        # APIのリクエスト先のURLを指定する。IPには、Ansibleで接続している管理対象ノードのIPを指定する
        url: "{{ zabbix_api_url }}"
        method: "GET"

        # リクエストヘッダーを定義する。
        headers:
          Content-Type: "application/json"
          Authorization: "Bearer {{ zabbix.api_token }}"

        # JSONで具体的なリクエスト情報を送信する
        body_format: "json"

        body:
          jsonrpc: "{{ zabbix_api_jsonrpc }}"
          method: "regexp.create"
          params:
            name: "Snipe-ITのダッシュボード画面表示判定"
            expressions:
              - expression_type: 0
                expression: "ダッシュボード"
                case_sensitive: 0
          id: 2
      # レスポンスを変数に格納する
      register:
        result_zabbix_api

      # レスポンスに以下のJSON構造でエラーを示す要素が含まれている場合はエラーとする
      # ※Ansibleでは、HTTPステータスコード=200だと失敗にならないため、明示的にエラーを発生させる
      # --------------------------------
      #   "json": {
      #     "error": {
      # --------------------------------
      failed_when: "'error' in result_zabbix_api.json"
