# OSや各種ソフトウェアのユーザ情報を定義したファイル
# MySQL関連のユーザ情報
mysql:
  database:
    # MySQLのデータベース名はZabbixの公式ドキュメント（https://www.zabbix.com/jp/download?zabbix=7.2）に則って設定すること
    name: zabbix
    encoding: utf8mb4

# Selenium関連の情報
selenium:
  work_dir: /root/selenium_and_drivers
  # ダウンロードしたいSeleniumのバージョン
  selenium_version: 4.29.0

  # ダウンロードしたいWebドライバのバージョン
  webdriver_version: 0.36.0

  # Webドライバ名（解凍後）
  webdriver_file_name: geckodriver

  # Zabbixの「zabbix_server.conf」に設定するWebドライバのURL
  zabbix_webdriver_url: "http://localhost:4444"

# Zabbix関連の情報
zabbix:
  # APIリクエストで使用する汎用的な設定値
  api_common:
    # Zabbix APIのリクエスト用URL
    api_url: "http://{{ ansible_default_ipv4.address }}/zabbix/api_jsonrpc.php"

    # Zabbix APIのjsonrpcのバージョン
    api_jsonrpc: "2.0"

    # Zabbix APIのリクエストヘッダ情報
    api_header_content_type: "application/json"
    api_header_authorization: "Bearer {{ secrets.zabbix.api_token }}"
    api_header_body_format: "json"

    # Zabbix APIリクエスト時に指定するID
    api_id: "2"

  # 作成したいホスト設定
  target_host:
    # 表示名
    name: "Snipe-IT_{{ '%Y%m%d-%H%M%S' | strftime(ansible_date_time.epoch) }}"
    # ホスト
    host: "snipe-it-test_{{ '%Y%m%d-%H%M%S' | strftime(ansible_date_time.epoch) }}"
    # ホストグループ
    groups:
      # 「Applications」を設定
      - groupid: 19
    # インタフェース
    interfaces:
      # 「タイプ」を「エージェント(1)」に設定
      - type: 1
        # 「IPアドレス」を設定
        ip: 127.0.0.1
        # DNS名を空欄
        dns: ""
        # 「接続方法」を「IP」に設定
        useip: 1
        # 「ポート」を設定
        port: "10050"
        # 「標準」にチェックを入れる
        main: 1


  # SeleniumでSnipe-ITのログイン画面にログインしてHTMLを返すアイテムの設定
  host_item:
    # 名前
    name: "Seleniumを使ったWeb監視テスト_{{ '%Y%m%d-%H%M%S' | strftime(ansible_date_time.epoch) }}"
    # タイプ（ブラウザは「22」）
    type: 22
    # キー
    key_: "selenium.inspection"
    # データ方（テキストは「4」）
    value_type: 4
    # Seleniumのスクリプト定義を記述する。なお、ユーザ名とパスワードは直接記載せず、Zabbixのホスト設定にあらかじめマクロが定義されていることを前提とする
    # 実態のユーザ名、パスワードは、マクロ変数のValueに定義されており、ansible-vaultに定義している
    params: |
      var browser = new Browser(Browser.firefoxOptions());

      // Snipe-ITのログイン画面に遷移する
      browser.navigate("http://{{ secrets.zabbix.target_host.ip }}/login");

      // ユーザ名とパスワードを入力
      browser.findElement("css selector", "#username").sendKeys("{{ secrets.zabbix.target_host.macros.username.macro }}");
      browser.findElement("css selector", "#password").sendKeys("{{ secrets.zabbix.target_host.macros.password.macro }}");

      // 「ログイン」をクリックする
      // ※IDがなく、クラス名では要素を一意に特定できないため、「ログイン」というラベルを持つボタンをクリックさせる
      browser.findElement("xpath", "//button[contains(text(),'ログイン')]").click();

      // アクセスしたページのHTML構造を返す
      return browser.getPageSource();

    # 監視間隔
    delay: "30s"
    # タイムアウト（デフォルト設定を用いるため、指定しない）
    # "timeout": "XX",
    # ヒストリの保存期間
    history: "3d"

    # 2つ以上アイテムを作成する場合は、以下の記述を複数回定義すること
    # # 表示名
    # - name: "XXX"
    # ...

  # 作成したい正規表現文字列の情報を定義
  regex:
    # Snipe-ITのログイン判定で使用する、ログイン後のHTML画面の文字列判定
    name: "Snipe-ITのダッシュボード画面表示判定_{{ '%Y%m%d-%H%M%S' | strftime(ansible_date_time.epoch) }}"
    expressions:
      # 条件の形式：（「文字列が含まれる」は0）
      - expression_type: 0
        # 条件式（判定で使用する文字列）
        expression: "ダッシュボード"
        # 大文字小文字を区別（チェックを入れないため0）
        case_sensitive: 0
